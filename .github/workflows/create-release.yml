on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      publishMS:
        description: 'Publish to MS marketplace'
        type: boolean
        required: true
        default: "true"
      publishOVSX:
        description: 'Publish to OpenVSX'
        type: boolean
        required: true
        default: "true"
      publishGH:
        description: 'Publish to GitHub releases'
        type: boolean
        required: true
        default: "true"

name: create-release
jobs:
  release-please:
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    name: Release to GitHub Releases
    runs-on: ubuntu-latest
    steps:
      - uses: GoogleCloudPlatform/release-please-action@v2
        id: release
        with:
          release-type: node
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

  package:
    needs: release-please
    name: Package
    runs-on: ubuntu-latest
    #if: ${{ needs.release-please.outputs.release_created }}
    outputs:
      packageName: ${{ steps.setup.outputs.packageName }}
      tag: ${{ steps.setup-tag.outputs.tag }}
      version: ${{ steps.setup-tag.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm i

      - name: Setup package path
        id: setup
        run: echo "::set-output name=packageName::$(node -e "console.log(require('./package.json').name + '-' + require('./package.json').version + '.vsix')")"

      - name: Package
        run: npx vsce package --out ${{ steps.setup.outputs.packageName }}
      
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.setup.outputs.packageName }}
          path: ${{ steps.setup.outputs.packageName }}
      
      - name: Setup tag
        id: setup-tag
        run: |
          $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
          Write-Host "tag: v$version"
          Write-Host "::set-output name=tag::v$version"
          Write-Host "::set-output name=version::$version"
        shell: pwsh

  publish-gh:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishGH == 'true'
    steps:
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release-please.outputs.upload_url }}
        asset_path: ./${{ needs.package.outputs.packageName }}
        asset_name: ${{ needs.package.outputs.packageName }}
        asset_content_type: application/zip

  publish-ms:
    name: Publish to MS marketplace
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishMS == 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ needs.package.outputs.packageName }}
      - name: Publish to MS marketplace
        run: npx vsce publish --packagePath ./${{ needs.package.outputs.packageName }} -p ${{ secrets.VSCE_PAT }}

  publish-ovsx:
    name: Publish to OpenVSX
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishOVSX == 'true'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: ${{ needs.package.outputs.packageName }}
      - name: Publish to OpenVSX
        run: npx ovsx publish ./${{ needs.package.outputs.packageName }} -p ${{ secrets.OVSX_PAT }} 